name: Main
permissions:
  contents: write
  actions: write
  deployments: write
  packages: write
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    name: "Deploying"
    env:
      JDK_VERSION: "21"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JDK_VERSION }}
          cache: "maven"
          distribution: "corretto"

      - name: "Removing snapshot from version"
        run: |
          mvn -q build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.incrementalVersion} versions:commit

      - name: Setup central
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JDK_VERSION }}
          cache: "maven"
          distribution: "corretto"
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_TOKEN
          gpg-private-key: ${{secrets.CODESIGN_PGP_KEY}}
          gpg-passphrase: PASSPHRASE

      - name: "Maven deploy maven central"
        run: mvn deploy --batch-mode -DskipTests --activate-profiles central --no-transfer-progress
        env:
          MAVEN_USERNAME: ${{secrets.MAVEN_TOKEN_USER}}
          MAVEN_TOKEN: ${{secrets.MAVEN_TOKEN}}
          PASSPHRASE: ${{secrets.CODESIGN_PGP_PASSPHRASE}}

      - name: Setup github packages
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JDK_VERSION }}
          cache: "maven"
          distribution: "corretto"

      - name: "Maven deploy github packages"
        run: mvn deploy --batch-mode -DskipTests --activate-profiles github --no-transfer-progress
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Tag release and rev version"
        run: |
          # tagging release:
          VERSION=$(grep \<version\> pom.xml | xargs | awk -F '[<>]' '{ print $3}')

          echo "################### using version: v$VERSION ###################"

          # tag repo
          git config --global user.email "ci@uvasoftware.com"
          git config --global user.name "CI"
          git tag -a v"${VERSION}" -m "Release by Github Actions v${VERSION}"
          git push origin v"${VERSION}"

          # bumping it to a new snapshot release:
          mvn -q build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.nextMinorVersion}.0-SNAPSHOT versions:commit

          VERSION=$(grep \<version\> pom.xml | xargs | awk -F '[<>]' '{ print $3}')

          echo "next version is: $VERSION"

          #commit version change
          git status
          git commit -a -m "bump to ${VERSION} [ci skip]"
          git push origin main
