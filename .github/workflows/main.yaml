name: Main
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    name: "Deploying"
    env:
      JDK_VERSION: "21"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JDK_VERSION }}
          cache: "maven"
          distribution: "corretto"
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{secrets.MAVEN_GPG_KEY}}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: "Removing snapshot from version"
        run: |
          mvn -q build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.incrementalVersion} versions:commit

      - name: "Setup java to publish to github packages"
        uses: actions/setup-java@v2-preview
        with:
          distribution: "zulu"
          java-version: ${{env.JDK_VERSION}}

      - name: "Maven deploy github packages"
        run: mvn deploy --batch-mode -D skipTests --activate-profiles github --no-transfer-progress
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Maven deploy maven central"
        run: mvn deploy --batch-mode -D skipTests --activate-profiles central --no-transfer-progress
        env:
          MAVEN_USERNAME: ${{secrets.MAVEN_USER}}
          MAVEN_PASSWORD: ${{secrets.MAVEN_PASSWORD}}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: "Tag release and rev version"
        run: |
          # tagging release:
          VERSION=$(grep \<version\> pom.xml | xargs | awk -F '[<>]' '{ print $3}')

          echo "################### using version: v$VERSION ###################"

          # tag repo
          git config --global user.email "ci@uvasoftware.com"
          git config --global user.name "CI"
          git tag -a v"${VERSION}" -m "Release by Github Actions v${VERSION}"
          git push origin v"${VERSION}"

          # bumping it to a new snapshot release:
          mvn -q build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.nextMinorVersion}.0-SNAPSHOT versions:commit

          VERSION=$(grep \<version\> pom.xml | xargs | awk -F '[<>]' '{ print $3}')

          echo "next version is: $VERSION"

          #commit version change
          git status
          git commit -a -m "bump to ${VERSION} [ci skip]"
          git push origin main
